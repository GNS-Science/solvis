[flake8]
max-line-length = 120
max-complexity = 18
ignore = E203, E266, W503
docstring-convention = google
per-file-ignores = __init__.py:F401,
	test/*.py: D100,D101,D102
exclude = .git,
	__pycache__,
	setup.py,
	build,
	dist,
	docs,
	releases,
	.venv,
	.tox,
	.mypy_cache,
	.pytest_cache,
	.vscode,
	.github,
	node_modules,
	# TODO where do these belong?
	multi_city_events.py,
	demo_multi_polygons.py,
	multi_city_analyse.py,
	demo.py,
	demo_polygons.py,
	demo_composite.py,
	scripts/cli.py,


[mypy]
ignore_missing_imports = True
# plugins = numpy.typing.mypy_plugin

[coverage:run]
exclude = */test_geometry_performance.py

[coverage:report]
exclude_lines =
	pragma: no cover
	def __repr__
	if self.debug:
	if settings.DEBUG
	raise AssertionError
	raise NotImplementedError
	if 0:
	if __name__ == .__main__.:
	def main


[tox:tox]
isolated_build = true
envlist = py39, py310, py311, py312, format, lint, build

[gh-actions]
python =
	3.12: py312
    3.11: py311
	3.10: py310
	3.9: py39, format, lint, build

[testenv]
allowlist_externals = pytest
extras =
	test
	scripts
passenv = *
setenv =
	PYTHONPATH = {toxinidir}
	PYTHONWARNINGS = ignore
commands =
	pytest -m "not performance and not slow" --cov=solvis --cov-branch --cov-report=xml --cov-report=term-missing test
	pytest -m "performance or slow"

[testenv:format]
allowlist_externals =
	isort
	black
extras =
	test
commands =
	isort solvis test
	black solvis test

[testenv:lint]
allowlist_externals =
	flake8
	mypy
extras =
	test
commands =
	flake8 solvis test
	mypy solvis test

[testenv:build]
allowlist_externals =
	poetry
	twine
extras =
	doc
	dev
commands =
	poetry build
	twine check dist/*

[tool:pytest]
markers =
    slow: slow tests.
    performance: performance tests.
    TODO_check_values: review test fixture expectations
