[flake8]
max-line-length = 120
max-complexity = 18
ignore = E203, E266, W503, D212
docstring-convention = google
per-file-ignores = __init__.py:F401,
    solvis/**__init__.py: F401,
    solvis/solvis.py: D103,
    solvis/**/*.py: D102, D103, D105, D106, D107,
    test/*.py: D100,D101,D102,D103,D104,D105,D107, D200,D202,D205, D403, D415, E226, E721
exclude = .git,
    demo/**,
    __pycache__,
    build,
    dist,
    docs,
    releases,
    .venv,
    .tox,
    .mypy_cache,
    .pytest_cache,
    .vscode,
    .github,
    node_modules,
    # TODO where do these belong?
    multi_city_events.py,
    demo_multi_polygons.py,
    multi_city_analyse.py,
    demo.py,
    demo_polygons.py,
    demo_composite.py,


[mypy]
ignore_missing_imports = True
# plugins = numpy.typing.mypy_plugin
plugins = pandera.mypy
exclude = solvis/fault_system_solution_helper.py


[coverage:run]
# exclude = */test_geometry_performance.py
omit =
    solvis/dochelper/*
    solvis/get_secret.py
    solvis/config.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    def main
    if TYPE_CHECKING:

[tox:tox]
isolated_build = true
envlist = py39, py310, py311, py312, format, lint, build

[gh-actions]
python =
    3.12: py312
    3.11: py311, format, lint
    3.10: py310
    3.9: py39, format, lint, build

[testenv]
allowlist_externals = pytest
extras =
    test
    scripts
passenv = *
setenv =
    PYTHONPATH = {toxinidir}
    PYTHONWARNINGS = ignore
commands =
    pytest --cov=solvis --cov-branch --cov-report=xml --cov-report=term-missing test

[testenv:format]
allowlist_externals =
    isort
    black
extras =
    test
commands =
    isort solvis test
    black solvis test

[testenv:lint]
allowlist_externals =
    flake8
    mypy
extras =
    test
commands =
    flake8 solvis test
    mypy solvis test

[testenv:build]
allowlist_externals =
    poetry
extras =
    doc
    dev
commands =
    poetry build

[tool:pytest]
markers =
    slow: slow tests.
    performance: performance tests.
    TODO_check_values: review test fixture expectations
