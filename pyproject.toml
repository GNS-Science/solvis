[tool.poetry]
name = "solvis"
version = "0.6.0"
description = "analysis of opensha modular solution files."
authors = ["Chris Chamberlain <chrisbc@artisan.co.nz>"]
license = "AGPL3"
readme = "README.md"
classifiers=[
    'Development Status :: 2 - Pre-Alpha',
    'Intended Audience :: Developers',
    'License :: OSI Approved :: GNU General Public License v3 (GPLv3)',
    'Natural Language :: English',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10'
]
packages = [
	{include = "solvis"},
    {include = "test", format = "sdist" }
]

[tool.poetry.scripts]
cli = 'scripts.cli:cli'

[tool.poetry.dependencies]
python = ">=3.8,<4.0"
pandas = "^1.3.4"
python-dateutil = "^2.8.2"
click = "^8.1.3"
click-plugins = "^1.1.1"
geopandas = "^0.12.2"
pytz = "2021.3"
pyproj = "^3.3"
pyvista = {version = "^0.37.0", optional = true, extras = ["vtk"]}
nshm-toshi-client = {version = "^1.0.0", optional = true}
boto3 = {version = "^1.26.82", optional = true}
nzshm-model = {version = "^0.2.0"}

[tool.poetry.group.dev.dependencies]
black  = { version = "^22.3"}
bump2version = "^1.0.1"
isort  = { version = "^5.8.0"}
flake8  = { version = "^3.9.2"}
flake8-docstrings = { version = "^1.6.0", optional = true }
mypy = {version = "^0.900"}
pytest = { version = "^6.2.4"}
pytest-cov  = { version = "^2.12.0"}
twine = "^4.0.2"
nzshm-common = "^0.4.0"
matplotlib = "^3.6.3"
tox = "^4.4.4"
ipython = "^8.11.0"

[tool.poetry.extras]
test = [
    "pytest",
    "black",
    "isort",
    "mypy",
    "flake8",
    "flake8-docstrings",
    "pytest-cov"
    ]
scripts = [
    "click",
    "nzshm-model",
    "nshm-toshi-client",
    "boto3"
]
vtk = [
    "pyvista"
]
dev = ["tox", "pre-commit", "virtualenv", "pip", "twine", "toml", "bump2version"]


[tool.black]
line-length = 120
skip-string-normalization = true
target-version = ['py310', 'py38', 'py39']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 120
skip_gitignore = true
# you can skip files as below
#skip_glob = docs/conf.py

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
